<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:foo="http://example.org/2005/02/13/#foo"
      xml:id="start">
<!--
https://bugzilla.mozilla.org/show_bug.cgi?id=275196
-->
<head>
  <title>Test for Bug 275196</title>
  <script type="text/javascript" src="/MochiKit/packed.js"></script>
  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
    <style type="text/css">
      :root {
        background: red;
      }

      :root#foo {
         background: rgb(0, 255, 0);
      }

      :root#bar {
        background: rgb(0, 0, 255);
      }

      *[*|green] {
        background: rgb(0, 255, 0);
      }

      #xhtml3, #foo2 {
        background: rgb(0, 255, 0);
      }
    </style>
</head>
<body>
<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=275196">Mozilla Bug 275196</a>
<p id="display"></p>
<div id="content">
  <div id="xhtml1" green="true">Element in XHTML namespace, attribute in null namespace</div>
  <div id="xhtml2" foo:green="true">Element in XHTML namespace, attribute in foo namespace</div>
  <foo:foo xml:id="foo1" foo:green="true">Element in foo namespace, attribute in foo namespace</foo:foo>
  <div id="xhtml3">Element in XHTML namespace, id attribute</div>
  <foo:foo xml:id="foo2">Element in foo namespace, xml:id attribute</foo:foo>
</div>
<pre id="test">
<script class="testbody" type="text/javascript">
<![CDATA[

/** Test for Bug 275196 **/

// Test whether setting 'native' ID overrides xml:id
function test_1() {
  try {
    document.getElementById('start').setAttribute('id', 'bar');
  } catch (e) {
    ok(false, "Couldn't find element 'start'");
    test_2();
    return;
  }
  ok(document.defaultView.getComputedStyle(document.documentElement, null).
       getPropertyValue('background-color') == "rgb(0, 0, 255)",
     "The background of the documentElement should be blue.");
  test_2();
}

// Test if ID 'start' was removed from the document when the ID was set to 'bar'.
function test_2() {
  ok(document.getElementById('bar') != document.getElementById('start'),
     "Element with ID 'bar' shouldn't be the same as 'start'");
  test_3();
}

// Setting xml:id and removing 'native' ID
function test_3() {
  var b = null;
  try {
    b = document.getElementById('bar');
    b.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:id", "foo");
    b.removeAttribute('id');
  } catch (e) {
    ok(false, e);
    test_4();
    return;
  }
  ok(document.defaultView.getComputedStyle(document.documentElement, null).
       getPropertyValue('background-color') == "rgb(0, 255, 0)",
     "The background of the documentElement should be green.");
  test_4();
}

// Setting 'native' ID
function test_4() {
  try {
    document.getElementById('foo').setAttribute('id', 'bar');
  } catch (e) {
    ok(false, e);
    test_5();
    return;
  }
  ok(document.defaultView.getComputedStyle(document.documentElement, null).
       getPropertyValue('background-color') == "rgb(0, 0, 255)",
     "The background of the documentElement should be blue.");
  test_5();
}

function testElementBackground(elementId) {
  var el = document.getElementById(elementId);
  ok(document.defaultView.getComputedStyle(el, null).
       getPropertyValue('background-color') == "rgb(0, 255, 0)",
     "The background of the element should be green.");

  el.removeAttribute("green");
  el.removeAttributeNS("http://example.org/2005/02/13/#foo", "green");
  ok(document.defaultView.getComputedStyle(el, null).
       getPropertyValue('background-color') == "transparent",
     "The element should have transparent background.");
}

// Test *[*|green] style rule.
function test_5() {
  testElementBackground("xhtml1");
  testElementBackground("xhtml2");
  testElementBackground("foo1");
  test_6();
}

// Test #xhtml3, #foo2 style rule.
function test_6() {
  var el = document.getElementById("xhtml3");
  ok(document.defaultView.getComputedStyle(el, null).
       getPropertyValue('background-color') == "rgb(0, 255, 0)",
     "The background of the element should be green.");

  el = document.getElementById("foo2");
  ok(document.defaultView.getComputedStyle(el, null).
       getPropertyValue('background-color') == "rgb(0, 255, 0)",
     "The background of the element should be green.");
  SimpleTest.finish();
}

SimpleTest.waitForExplicitFinish();
addLoadEvent(test_1);

]]>
</script>
</pre>
</body>
</html>

