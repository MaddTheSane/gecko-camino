/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Selection code.
 *
 * The Initial Developer of the Original Code is
 * Google Inc.
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Brett Wilson <brettw@gmail.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISelection.idl"

interface nsIDOMNode;
interface nsIDOMRange;

%{C++
#include "nsCOMArray.h"
%}

[ptr] native RangeArray(nsCOMArray<nsIDOMRange>);

[scriptable, uuid(eab4ae76-efdc-4e09-828c-bd921e9a662f)]
interface nsISelection2 : nsISelection
{
  void GetRangesForInterval(
      in nsIDOMNode beginNode, in PRInt32 beginOffset,
      in nsIDOMNode endNode, in PRInt32 endOffset,
      in PRBool allowAdjacent,
      out PRUint32 resultCount,
      [retval, array, size_is(resultCount)] out nsIDOMRange results);

  [noscript] void GetRangesForIntervalCOMArray(
      in nsIDOMNode beginNode, in PRInt32 beginOffset,
      in nsIDOMNode endNode, in PRInt32 endOffset,
      in PRBool allowAdjacent,
      in RangeArray results);
};
