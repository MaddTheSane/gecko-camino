<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>
<window title="Testing Application Storage"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml">
  
  <script type="application/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
  <script type="application/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
  <script type="application/javascript" src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>

  <body xmlns="http://www.w3.org/1999/xhtml" />

<script type="application/javascript">
<![CDATA[

test_Storage();

function test_Storage() {
  // test for existence of values
  var hasItem = Application.storage.has("fuel-test-missing");
  is(hasItem, false, "Check 'Application.storage.has' for non-existing item");
  Application.storage.set("fuel-test", "dummy");
  hasItem = Application.storage.has("fuel-test");
  is(hasItem, true, "Check 'Application.storage.has' for existing item");

  // test getting non-existing and existing values
  var itemValue = Application.storage.get("fuel-test-missing", "default");
  is(itemValue, "default", "Check 'Application.storage.get' for non-existing item");
  itemValue = Application.storage.get("fuel-test", "default");
  is(itemValue, "dummy", "Check 'Application.storage.get' for existing item");

  // test for overwriting an existing value
  Application.storage.set("fuel-test", "smarty");
  itemValue = Application.storage.get("fuel-test", "default");
  is(itemValue, "smarty", "Check 'Application.storage.get' for overwritten item");

  // check for change event when setting a value
  SimpleTest.waitForExplicitFinish();
  Application.storage.events.addListener("change", onStorageChange);
  Application.storage.set("fuel-test", "change event");
}

function onStorageChange(evt) {
  is(evt.data, "fuel-test", "Check 'Application.storage.set' fired a change event");
  Application.storage.events.removeListener("change", onStorageChange);
  SimpleTest.finish();
}

]]>
</script>

</window>
